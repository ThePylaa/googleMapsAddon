version: "3.3"
services:

  #Traefik Reverse Proxy
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=googlemapsaddon_traefik"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.production.acme.httpchallenge=true"
      - "--certificatesresolvers.production.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.production.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.production.acme.email=moser.stefan02@gmail.com"
      - "--certificatesresolvers.production.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik

  #NextJS Website
  web:
    container_name: "gMapsWebsite"
    build: ./website
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=PathPrefix(`/`)"
      - "traefik.http.services.website.loadbalancer.server.port=3000"
      - "traefik.http.routers.website.entrypoints=websecure"
      - "traefik.http.routers.website.tls.certresolver=production"
      - "traefik.docker.network=traefik"
    networks:
      - traefik
    deploy:
      replicas: 1

  #FastAPI
  api:
    container_name: "gMapsApi"
    build: ./api
    restart: always
    environment:
      #PostGreSQL Database Credentials
      DB_USER: "maps"
      DB_PASSWORD: "nu7fML74jQoqpi"
      DB_IP: "postgres"
      DB_NAME: "maps"

      #Redis Credentials
      REDIS_IP:  "redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "4f4qDdVo4z46Tu33"

      #Google API Key get one from https://developers.google.com/maps/documentation/javascript/get-api-key
      GOOGLE_API_KEY: "AIzaSyD8jWP3YAQt_Kx33ygLjujKB5tiLsocKzQ"

      #TankerKoenig API Key get one from https://creativecommons.tankerkoenig.de/
      TANKERKONIG_API_KEY: "e9016280-b1f1-78a5-f8e7-7ab10081903b"

      #Local API Configurations
      API_IP: "0.0.0.0"
      API_PORT: "23451"

      #Hashing Algorithm and Secret Key
      SECRET_KEY: "d0212db3d7b090cfd5f384b4b375c4bf"
      ALGORITHM: "HS256"

      ADMIN_USERNAME: "admin"
      ADMIN_PASSWORD: "admin"
      ADMIN_EMAIL: "admin@admin.com"
      ADMIN_FORENAME: "admin"
      ADMIN_SURNAME: "admin"

      # True or False
      DEBUG: "False" 

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.forceSlash=true"
      - "traefik.http.routers.api.middlewares=api-stripprefix"
      - "traefik.http.services.api.loadbalancer.server.port=23451"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=production"
      - "traefik.docker.network=googlemapsaddon_traefik"
    networks:
      - traefik
    deploy:
      replicas: 1

  #Webscraper
  scraper:
    container_name: "gMapsScraper"
    build: ./speedCameraScraper/
    restart: always
    environment: 
      API_IP: http://api:23451
      ADMIN_USERNAME: "admin"
      ADMIN_PASSWORD: "admin"
    networks:
      - traefik

  #PostgreSQL Database
  db:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "maps"
      POSTGRES_PASSWORD: "nu7fML74jQoqpi"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - traefik
    

  #Redis Database
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass 4f4qDdVo4z46Tu33
    volumes: 
      - cache:/data
    networks:
      - traefik


networks:
  traefik:

volumes:
  cache:
    driver: local
  letsencrypt:
    driver: local
  postgres:
    driver: local